#!/bin/bash
# <%= node['chef-rundeck']['init.d']['name'] %>
# chkconfig: <%= node['chef-rundeck']['init.d']['runlevels'] %> <%= node['chef-rundeck']['init.d']['startorder'] %> <%= node['chef-rundeck']['init.d']['stoporder'] %>
# description: <%= node['chef-rundeck']['init.d']['name'] %>
# processname: <%= node['chef-rundeck']['init.d']['name'] %>

COMMAND="<%= @command %>"
NAME=<%= node['chef-rundeck']['init.d']['name'] %>
USER=<%= node['chef-rundeck']['init.d']['user'] %>
LOGFILE=<%= node['chef-rundeck']['init.d']['logfile'] %>
DESC=<%= node['chef-rundeck']['init.d']['name'] %>
PIDFILE=/var/run/$NAME.pid
SCRIPTNAME=/etc/init.d/$NAME
 
case "$1" in
start)
        printf "%-50s" "Starting $DESC..."
        PID=`su $USER -s /bin/bash -c "$COMMAND" >> $LOGFILE 2>&1 & echo $!`
        #echo "Saving PID" $PID " to " $PIDFILE
        if [ -z $PID ]; then
            printf "%s\n" "Fail"
        else
            echo $PID > $PIDFILE
            printf "%s\n" "Ok"
        fi
;;
status)
        printf "%-50s" "Checking $DESC..."
        if [ -f $PIDFILE ]; then
            PID=`cat $PIDFILE`
            if [ -z "`ps axf | grep ${PID} | grep -v grep`" ]; then
                printf "%s\n" "Process dead but pidfile exists"
            else
                echo "Running"
            fi
        else
            printf "%s\n" "Service not running"
        fi
;;
stop)
        printf "%-50s" "Stopping $DESC"
            PID=`cat $PIDFILE`
        if [ -f $PIDFILE ]; then
            kill $PID
            printf "%s\n" "Ok"
            rm -f $PIDFILE
        else
            printf "%s\n" "pidfile not found"
            exit 1
        fi
;;
 
restart)
        $0 stop
        $0 start
;;
 
*)
        echo "Usage: $0 {status|start|stop|restart}"
        exit 1
esac
